<?xml version="1.0"?>
<configuration>
  <configSections>
    <sectionGroup name="PluginManager">
      <section name="PluginsToLoad" type="System.Configuration.SingleTagSectionHandler,system, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <section name="FeaturesToLoad" type="System.Configuration.SingleTagSectionHandler,system, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!-- These definition throw TypeLoadException exception on XP and Vista
      <section name="PluginsToLoad" type="System.Configuration.SingleTagSectionHandler" />
      <section name="FeaturesToLoad" type="System.Configuration.SingleTagSectionHandler" />
       -->
    </sectionGroup>
    <!-- C++ variables or paths that need to be considered on runtime -->
    <sectionGroup name="NativeResources">
      <section name="RADF" type="System.Configuration.SingleTagSectionHandler,system, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <section name="CGM" type="System.Configuration.SingleTagSectionHandler,system, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <section name="CGMInterop" type="System.Configuration.SingleTagSectionHandler,system, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <section name="HOOPS" type="System.Configuration.SingleTagSectionHandler,system, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    </sectionGroup>
  </configSections>
  <system.windows.forms jitDebugging="true" />
  <appSettings>
    <!-- Turns command tracing on if true - write all commands to trace file -->
    <add key="EnableCommandTracing" value="true" />
    <!-- If empty or does not exist using default name and location - RADF_HOME\Log folder -->
    <!-- If contains a string, this string is going to be the file name -->
    <add key="CommandTraceFileName" value="" />
    <!-- Type of command parser. Coud be "XML" or "String". Default is "XMML" -->
    <add key="CommandParserType" value="XML" />
    <!-- Delay in milliseconds between commands when playing back a command file. Helps to see a result of each command" -->
    <add key="CommandPlaybackDelayMs" value="200" />
    <!-- Control appearance of Properties window. Possible values: Docked, Hidden, AutoHide -->
    <add key="PropertiesWindowState" value="AutoHide" />
    <!-- Control appearance of FeatureWindow. Possible values: Docked, Hidden, AutoHide -->
    <add key="FeatureWindowState" value="Docked" />
    <!-- Control type of tree view. Possible values: TreeView3D - part of HOOPS View3D, RadfExplorerView - WPF tree view. -->
    <add key="TreeViewComponentName" value="TreeView3D" />
    <!-- Control appearance of Ribbon. Possible values: true, false. -->
    <add key="RibbonMinimized" value="false" />
    <!-- View related settings-->
    <!-- Type of 3D view type (Hoops, CaeHoopsView, X3DView, etc, must be registered as a plugin)-->
    <add key="ViewType" value="HoopsView" />
    <!-- Default controller strategy. Choose from Select, StickySelect, Retate, Pan. -->
    <add key="ControllerInputStrategy" value="StickySelect" />
    <!-- Custom controller strategy to be used mostly for testing new functionality. Use full class name including namespace. 
    The default value is for "StickySelect". Change the value as necessary. -->
    <add key="CustomControllerInputStrategy" value="Spatial.RADF.Core.Input2OpStrategyStickySelect" />
    <!-- Possible values: None, Log, Assert, Throw, CriticalThrow-->
    <add key="SoftExceptionPolicy" value="Assert" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <PluginManager>
    <!-- Add/remove Plugins here in order they should be loaded -->
    <PluginsToLoad>
      <!-- CGM -->
      <add name="Spatial.RADF.CGM" />
      <add name="Spatial.RADF.WPF" />
    </PluginsToLoad>
    <!-- Add/remove Features here in order they should be loaded -->
    <!-- Features are always loaded after Plugins -->
    <FeaturesToLoad>
      <!--       <add name="Spatial.RADF.FeatureSamples" />-->
    </FeaturesToLoad>
  </PluginManager>
  <!-- Variables and bits of path that need to be considered at runtime for C++ dependencies;
       for developement stage, usually these variables are defined/set in the environment before launching
       visual studio, this step can be avoided at run time by defining these variables-->
  <NativeResources>
    <RADF>
      <EnvVar name="ARCH" value="" />
      <EnvVar name="RADF_HOME" value="" />
      <EnvVar name="RADF_DATA" value="" />
    </RADF>
    <!-- CGM C++ dependencies -->
    <CGM>
      <!--where CGM is installed -->
      <EnvVar name="CGMROOT" value="" />
      <EnvVar name="CGMPATH" value="" addtopath="true" />
      <EnvVar name="CGMCSPATH" value="" addtopath="true" />
    </CGM>
    <CGMInterop>
      <!--Standard Output behaviour-->
      <EnvVar name="CNEXTOUTPUT" value="NUL" addtopath="false" />
    </CGMInterop>
    <!-- HOOPS C++ dependencies -->
    <HOOPS>
      <EnvVar name="HOOPS_INSTALL_DIR" value="" addtopath="false" />
      <EnvVar name="HOOPS_BIN" value="" addtopath="true" />
      <EnvVar name="HOOPS_DLL" value="" addtopath="false" />
      <EnvVar name="HOOPS_STREAM_DLL" value="" addtopath="false" />
    </HOOPS>
  </NativeResources>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager enabled="true" defaultProvider="ClientRoleProvider">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" /></startup>
</configuration>